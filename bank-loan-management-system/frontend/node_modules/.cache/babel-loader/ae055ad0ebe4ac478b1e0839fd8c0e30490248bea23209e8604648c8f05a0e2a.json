{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chait\\\\bank-loan-management-system\\\\frontend\\\\src\\\\components\\\\Payment\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001/api/v1';\nfunction Payment() {\n  _s();\n  const [formData, setFormData] = useState({\n    loan_id: '',\n    amount: '',\n    payment_type: 'EMI'\n  });\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setResult(null);\n    try {\n      // Ensure the loan_id is not empty before making the request\n      if (!formData.loan_id.trim()) {\n        throw new Error('Loan ID is required.');\n      }\n      const response = await fetch(`${API_URL}/loans/${formData.loan_id}/payments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: formData.amount,\n          payment_type: formData.payment_type\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error || 'Failed to record payment.');\n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Record a Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"loan_id\",\n        value: formData.loan_id,\n        onChange: handleChange,\n        placeholder: \"Loan ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        value: formData.amount,\n        onChange: handleChange,\n        placeholder: \"Payment Amount\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"payment_type\",\n        value: formData.payment_type,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EMI\",\n          children: \"EMI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LUMP_SUM\",\n          children: \"Lump Sum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Record Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Payment Recorded Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this), \" \", result.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Payment ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this), \" \", result.payment_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Remaining Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this), \" $\", result.remaining_balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"EMIs Left:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this), \" \", result.emis_left]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Payment, \"aWhyZ4uZuJkeo617xmGLhr9ZFac=\");\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_URL","Payment","_s","formData","setFormData","loan_id","amount","payment_type","result","setResult","error","setError","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","trim","Error","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","payment_id","remaining_balance","emis_left","_c","$RefreshReg$"],"sources":["C:/Users/chait/bank-loan-management-system/frontend/src/components/Payment/Payment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Payment.css';\r\n\r\nconst API_URL = 'http://localhost:3001/api/v1';\r\n\r\nfunction Payment() {\r\n    const [formData, setFormData] = useState({\r\n        loan_id: '',\r\n        amount: '',\r\n        payment_type: 'EMI'\r\n    });\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setResult(null);\r\n        try {\r\n            // Ensure the loan_id is not empty before making the request\r\n            if (!formData.loan_id.trim()) {\r\n                throw new Error('Loan ID is required.');\r\n            }\r\n            const response = await fetch(`${API_URL}/loans/${formData.loan_id}/payments`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    amount: formData.amount,\r\n                    payment_type: formData.payment_type\r\n                })\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) throw new Error(data.error || 'Failed to record payment.');\r\n            setResult(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"payment-container\">\r\n            <h2>Record a Payment</h2>\r\n            <form onSubmit={handleSubmit} className=\"form-container\">\r\n                <input type=\"text\" name=\"loan_id\" value={formData.loan_id} onChange={handleChange} placeholder=\"Loan ID\" required />\r\n                <input type=\"number\" name=\"amount\" value={formData.amount} onChange={handleChange} placeholder=\"Payment Amount\" required />\r\n                <select name=\"payment_type\" value={formData.payment_type} onChange={handleChange}>\r\n                    <option value=\"EMI\">EMI</option>\r\n                    <option value=\"LUMP_SUM\">Lump Sum</option>\r\n                </select>\r\n                <button type=\"submit\">Record Payment</button>\r\n            </form>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {result && (\r\n                <div className=\"result\">\r\n                    <h3>Payment Recorded Successfully</h3>\r\n                    <p><strong>Message:</strong> {result.message}</p>\r\n                    <p><strong>Payment ID:</strong> {result.payment_id}</p>\r\n                    <p><strong>Remaining Balance:</strong> ${result.remaining_balance}</p>\r\n                    <p><strong>EMIs Left:</strong> {result.emis_left}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}